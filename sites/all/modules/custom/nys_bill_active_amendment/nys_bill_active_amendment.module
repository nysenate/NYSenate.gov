<?php

/**
 * @file
 * A module used to display the active amendment of a bill.
 */

/**
 * Implements hook_help().
 */
function nys_bill_active_amendment_help($path, $arg) {
  if ($path == "admin/help#nys_bill_active_amendment") {
    return '<p>' . t("Handles assignment of active amendment url aliases to bill nodes.") . '</p>';
  }
}

/**
 * Implements hook_node_insert().
 */
function nys_bill_active_amendment_node_insert($node) {
  if ($node->type === 'bill') {
    nys_bill_active_amendment_validate_aliases($node);
  }
}

/**
 * Implements hook_node_update().
 */
function nys_bill_active_amendment_node_update($node) {
  if ($node->type === 'bill') {
    nys_bill_active_amendment_validate_aliases($node);
  }
}

/**
 * Fetches url aliases.
 *
 * @param null $pattern
 *   Pattern used in LIKE condition.
 * @param bool $reset
 *   Whether or not to reset the cached aliases.
 *
 * @return mixed
 *   Path aliases and identifiers that match $pattern.
 */
function nys_bill_active_amendment_fetch_existing_alias($pattern = NULL, $reset = FALSE) {
  static $cached = array('pattern' => '', 'existing' => array());

  if (!$pattern && $cached['pattern']) {
    $pattern = $cached['pattern'];
  }

  if ($pattern && ($pattern != $cached['pattern'] || $reset)) {
    $cached['pattern'] = $pattern;
    // Get existing aliases, indexed by the alias.
    $existing_alias = db_select('url_alias', 'urlas')
      ->condition('urlas.alias', (string) $pattern, 'LIKE');
    $existing_alias->addExpression('LOWER(alias)', 'alias');
    $existing_alias->fields('urlas', array('pid', 'source'));
    $cached['existing'] = $existing_alias->execute()->fetchAllAssoc('alias');
  }

  return $cached['existing'];
}

/**
 * Test a path string for an existing alias.
 *
 * @param string $check_url
 *   The path to check an alias for.
 * @param int $source_nid
 *   The node id of interest.
 */
function nys_bill_active_amendment_test_for_alias($check_url, $source_nid) {
  $existing = nys_bill_active_amendment_fetch_existing_alias($check_url);
  $path = array(
    'source' => 'node/' . $source_nid,
    'alias' => strtolower($check_url),
  );

  if (array_key_exists($path['alias'], $existing)) {
    if ($existing[$path['alias']]->source != $path['source']) {
      $path['pid'] = $existing[$path['alias']]->pid;
    }
    else {
      // Alias exists, and matches.  Stop the processing.
      $path = array();
    }
  }

  if ($path) {
    path_save($path);
  }
}

/**
 * Validate the aliases on a bill node.
 *
 * @param object $node
 *   The node of interest.
 */
function nys_bill_active_amendment_validate_aliases($node) {
  if ($node->type === 'bill') {
    // Turn off pathauto processing for this node.
    // See also: pathauto_node_update_alias().
    $node->path['pathauto'] = '';

    // Need the year to search for existing aliases.
    $bill_session_year = $node->field_ol_session[LANGUAGE_NONE][0]['value'];

    // Need the base print to search for similar existing aliases.
    $base_print_no = strtolower($node->field_ol_base_print_no[LANGUAGE_NONE][0]['value']);

    // Reference variables.
    $base_url = 'legislation/bills/' . $bill_session_year . '/' . $base_print_no;

    // Active version will receive the shortcut alias
    // 'legislation/bills/{year}/{base_print}'.
    if (isset($node->field_ol_active_version[LANGUAGE_NONE][0]['value'])) {
      $active_version = strtolower($node->field_ol_active_version[LANGUAGE_NONE][0]['value']);
    }
    else {
      $active_version = '';
    }

    // If a bill has no amendments, active version will be an empty string.
    if (!$active_version) {
      $active_version = 'original';
    }

    // Fetch all known versions of the current bill.
    $all_versions = nys_bills_get_bill_versions($node->type, $base_print_no, $bill_session_year);

    // For each version of this bill, test that the alias is well-constructed
    // and pointing to the proper place.
    foreach ($all_versions as $key => $val) {
      /* 0 => array ('nid' => '6194920', 'title' => 'S6400') */
      // Identify the current version.  Account for 'original'.
      $current_version = strtolower(preg_replace("/^{$base_print_no}/i", '', $val['title']));
      if (!$current_version) {
        $current_version = 'original';
      }

      // Does 'legislation/bills/{year}/{title}/amendment/{version}' exist?
      $check_url = "{$base_url}/amendment/{$current_version}";
      nys_bill_active_amendment_test_for_alias($check_url, $val['nid']);

      // If this version is the "active" version, check the base_url as well.
      if ($current_version == $active_version) {
        nys_bill_active_amendment_test_for_alias($base_url, $val['nid']);
      }
    }
  }
}
